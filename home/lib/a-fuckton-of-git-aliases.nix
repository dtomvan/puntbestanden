# Excerpt from ohmyzsh
{
  fish ? false,
}:
{
  "g" = ''git'';
  "ga" = ''git add'';
  "gaa" = ''git add --all'';
  "gapa" = ''git add --patch'';
  "gau" = ''git add --update'';
  "gav" = ''git add --verbose'';
  "gwip" =
    if fish then
      ''git add -A; git rm (git ls-files --deleted); git commit --no-verify --no-gpg-sign --message "--wip-- [skip ci]"''
    else
      ''git add -A; git rm $(git ls-files --deleted) 2> /dev/null; git commit --no-verify --no-gpg-sign --message "--wip-- [skip ci]"'';
  "gam" = ''git am'';
  "gama" = ''git am --abort'';
  "gamc" = ''git am --continue'';
  "gams" = ''git am --skip'';
  "gap" = ''git apply'';
  "gapt" = ''git apply --3way'';
  "gbs" = ''git bisect'';
  "gbsb" = ''git bisect bad'';
  "gbsg" = ''git bisect good'';
  "gbsn" = ''git bisect new'';
  "gbso" = ''git bisect old'';
  "gbsr" = ''git bisect reset'';
  "gbss" = ''git bisect start'';
  "gbl" = ''git blame -w'';
  "gb" = ''git branch'';
  "gba" = ''git branch --all'';
  "gbd" = ''git branch --delete'';
  "gbD" = ''git branch --delete --force'';
  "gbm" = ''git branch --move'';
  "gbnm" = ''git branch --no-merged'';
  "gbr" = ''git branch --remote'';
  "gco" = ''git checkout'';
  "gcor" = ''git checkout --recurse-submodules'';
  "gcb" = ''git checkout -b'';
  "gcB" = ''git checkout -B'';
  "gcd" = ''git checkout develop'';
  "gcm" = ''git checkout main'';
  "gcp" = ''git cherry-pick'';
  "gcpa" = ''git cherry-pick --abort'';
  "gcpc" = ''git cherry-pick --continue'';
  "gcl" = ''git clone --recurse-submodules'';
  "gclf" = ''git clone --recursive --shallow-submodules --filter=blob:none --also-filter-submodules'';
  "gcam" = ''git commit --all --message'';
  "gcas" = ''git commit --all --signoff'';
  "gcsm" = ''git commit --signoff --message'';
  "gc" = ''git commit --verbose'';
  "gca" = ''git commit --verbose --all'';
  "gca!" = ''git commit --verbose --all --amend'';
  "gc!" = ''git commit --verbose --amend'';
  "gcn" = ''git commit --verbose --no-edit'';
  "gcn!" = ''git commit --verbose --no-edit --amend'';
  "gcs" = ''git commit -S'';
  "gcss" = ''git commit -S -s'';
  "gcf" = ''git config --list'';
  "gd" = ''git diff'';
  "gdca" = ''git diff --cached'';
  "gdcw" = ''git diff --cached --word-diff'';
  "gds" = ''git diff --staged'';
  "gdw" = ''git diff --word-diff'';
  "gdup" = ''git diff @{upstream}'';
  "gdt" = ''git diff-tree --no-commit-id --name-only -r'';
  "gf" = ''git fetch'';
  "gfa" = ''git fetch --all --tags --prune'';
  "gfo" = ''git fetch origin'';
  "gg" = ''git gui citool'';
  "gga" = ''git gui citool --amend'';
  "ghh" = ''git help'';
  "glgg" = ''git log --graph'';
  "glgm" = ''git log --graph --max-count=10'';
  "glo" = ''git log --oneline --decorate'';
  "glog" = ''git log --oneline --decorate --graph'';
  "glp" = ''git log --pretty=<format>'';
  "glg" = ''git log --stat'';
  "glgp" = ''git log --stat --patch'';
  "gfg" = ''git ls-files | grep'';
  "gm" = ''git merge'';
  "gma" = ''git merge --abort'';
  "gmc" = ''git merge --continue'';
  "gms" = ''git merge --squash'';
  "gmff" = ''git merge --ff-only'';
  "gmom" = ''git merge origin/main'';
  "gmum" = ''git merge upstream/main'';
  "gmtl" = ''git mergetool --no-prompt'';
  "gl" = ''git pull'';
  "gpr" = ''git pull --rebase'';
  "gprv" = ''git pull --rebase -v'';
  "gpra" = ''git pull --rebase --autostash'';
  "glum" = ''git pull upstream main'';
  "gp" = ''git push'';
  "gpd" = ''git push --dry-run'';
  "gpf!" = ''git push --force'';
  "gpf" = ''git push --force-with-lease --force-if-includes'';
  "gpv" = ''git push --verbose'';
  "gpod" = ''git push origin --delete'';
  "gpu" = ''git push upstream'';
  "grb" = ''git rebase'';
  "grba" = ''git rebase --abort'';
  "grbc" = ''git rebase --continue'';
  "grbi" = ''git rebase --interactive'';
  "grbo" = ''git rebase --onto'';
  "grbs" = ''git rebase --skip'';
  "grbd" = ''git rebase develop'';
  "grbm" = ''git rebase main'';
  "grf" = ''git reflog'';
  "gr" = ''git remote'';
  "grv" = ''git remote --verbose'';
  "gra" = ''git remote add'';
  "grrm" = ''git remote remove'';
  "grmv" = ''git remote rename'';
  "grup" = ''git remote update'';
  "grh" = ''git reset'';
  "gru" = ''git reset --'';
  "grhh" = ''git reset --hard'';
  "grhk" = ''git reset --keep'';
  "grhs" = ''git reset --soft'';
  "grs" = ''git restore'';
  "grss" = ''git restore --source'';
  "grst" = ''git restore --staged'';
  "grev" = ''git revert'';
  "grm" = ''git rm'';
  "grmc" = ''git rm --cached'';
  "gsh" = ''git show'';
  "gsps" = ''git show --pretty=short --show-signature'';
  "gstu" = ''git stash --include-untracked'';
  "gstc" = ''git stash clear'';
  "gstd" = ''git stash drop'';
  "gstl" = ''git stash list'';
  "gstp" = ''git stash pop'';
  "gsta" = ''git stash push'';
  "gsts" = ''git stash show --patch'';
  "gst" = ''git status'';
  "gss" = ''git status --short'';
  "gsb" = ''git status --short -b'';
  "gsi" = ''git submodule init'';
  "gsu" = ''git submodule update'';
  "gsd" = ''git svn dcommit'';
  "gsr" = ''git svn rebase'';
  "gsw" = ''git switch'';
  "gswc" = ''git switch -c'';
  "gswd" = ''git switch develop'';
  "gswm" = ''git switch main'';
  "gta" = ''git tag --annotate'';
  "gts" = ''git tag -s'';
  "gtv" = ''git tag | sort -V'';
  "gwch" = ''git whatchanged -p --abbrev-commit --pretty=medium'';
  "gwt" = ''git worktree'';
}
